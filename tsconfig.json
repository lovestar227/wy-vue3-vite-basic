{
  "compilerOptions": {
    /* 基本选项 */
    //指定 ECMAScript 目标版本: 'ES3' (default), 'ES5', 'ES6'/'ES2015', 'ES2016', 'ES2017', ... ,'ESNEXT'
    "target": "esnext",
    //指定使用模块: 'commonjs', 'amd', 'system', 'umd' , 'es2015', ... ,"esnext"
    "module": "esnext",
    //指定 jsx 代码的生成: 'preserve', 'react-native', or 'react'
    "jsx": "preserve",
    //从 tslib 导入辅助工具函数
    "importHelpers": true,
    //将每个文件作为单独的模块 （与 'ts.transpileModule' 类似）.
    "isolatedModules": false,
    //生成相应的 '.map' 文件
    "sourceMap": true,
    //允许编译 javascript 文件
    "allowJs": false,
    //指定要包含在编译中的库文件
    "lib": ["dom", "esnext"],
    //是否启用增量编译
    "incremental": true,
    //不允许函数参数双向协变
    "strictFunctionTypes": false,
    //忽略所有的声明文件（ *.d.ts）的类型检查。
    "skipLibCheck": true,
    //支持使用 import cjs from 'cjs' 的方式引入 commonjs 包
    "esModuleInterop": true,
    //引入文件名必须大小写一致
    "forceConsistentCasingInFileNames": true,
    //是否允许引入 JSON 文件
    "resolveJsonModule": true,

    /* 模块解析选项 */
    //选择模块解析策略： 'node' (Node.js) or 'classic' (TypeScript pre-1.6)
    "moduleResolution": "Node",
    //允许从没有设置默认导出的模块中默认导入。
    "allowSyntheticDefaultImports": true,
    //用于解析非相对模块名称的基目录
    "baseUrl": ".",
    "paths": {
      //模块名到基于 baseUrl 的路径映射的列表
      "/#/*": ["./*"],
      "/@/*": ["src/*"]
    },
    //需要包含的类型声明文件名列表
    "types": ["node", "vite/client", "element-plus/global"],
    //包含类型声明的文件列表
    "typeRoots": ["./node_modules/@types/", "./types"],

    /* 严格的类型检查选项 */
    //启用所有严格类型检查选项
    "strict": false,

    /* 其他选项 */
    //启用装饰器
    "experimentalDecorators": true
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "types/*.d.ts",
    "mock/*.ts",
    "vite.config.ts",
    "types/auto-imports.d.ts"
  ],
  "exclude": ["node_modules", "dist", "**/*.js"],
  "vueCompilerOptions": {
    "target": 3
  }
}
